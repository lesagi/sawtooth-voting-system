{"ast":null,"code":"var crypto = require(\"crypto\");\n\nvar _hash = function _hash(x) {\n  return crypto.createHash(\"sha512\").update(x).digest(\"hex\").toLowerCase().substring(0, 64);\n};\n\nvar _display = function _display(msg) {\n  var n = msg.search(\"\\n\");\n  var length = 0;\n\n  if (n !== -1) {\n    msg = msg.split(\"\\n\");\n\n    for (var i = 0; i < msg.length; i++) {\n      if (msg[i].length > length) {\n        length = msg[i].length;\n      }\n    }\n  } else {\n    length = msg.length;\n    msg = [msg];\n  }\n\n  console.log(\"+\" + \"+\".repeat(length + 2) + \"+\");\n\n  for (var _i = 0; _i < msg.length; _i++) {\n    var len = length - msg[_i].length;\n\n    if (len % 2 === 1) {\n      console.log(\"+ \" + \" \".repeat(Math.floor(len / 2)) + msg[_i] + \" \".repeat(Math.floor(len / 2 + 1)) + \" +\");\n    } else {\n      console.log(\"+ \" + \" \".repeat(Math.floor(len / 2)) + msg[_i] + \" \".repeat(Math.floor(len / 2)) + \" +\");\n    }\n  }\n\n  console.log(\"+\" + \"+\".repeat(length + 2) + \"+\");\n};\n\nvar _printInMiddle = function _printInMiddle(msg, length) {};\n\nvar _tidyDisplay = function _tidyDisplay(title, lineDec, msg) {\n  var n = msg.search(\"\\n\");\n  var length = 0;\n\n  if (n !== -1) {\n    msg = msg.split(\"\\n\");\n\n    for (var i = 0; i < msg.length; i++) {\n      if (msg[i].length > length) {\n        length = msg[i].length;\n      }\n    }\n  } else {\n    length = msg.length;\n    msg = [msg];\n  }\n\n  console.log(\"+\" + \"-\".repeat(length + 2) + \"+\");\n\n  for (var _i2 = 0; _i2 < msg.length; _i2++) {\n    var len = length - msg[_i2].length;\n\n    if (len % 2 === 1) {\n      console.log(\"\".concat(lineDec, \" \").concat(\" \".repeat(Math.floor(len / 2)), \" \").concat(msg[_i2], \" \").concat(\" \".repeat(Math.floor(len / 2 + 1)), \" \").concat(lineDec));\n    } else {\n      console.log(\"\".concat(lineDec, \" \").concat(\" \".repeat(Math.floor(len / 2)), \" \").concat(msg[_i2], \" \").concat(\" \".repeat(Math.floor(len / 2)), \" \").concat(lineDec));\n    }\n  }\n\n  console.log(\"+\" + \"-\".repeat(length + 2) + \"+\");\n};\n\nmodule.exports = {\n  _hash: _hash,\n  _display: _display\n};","map":{"version":3,"sources":["C:/Users/sagi.levi/DevProjects/sawtooth-dev/client-next/src/BlockchainModules/utils.js"],"names":["crypto","require","_hash","x","createHash","update","digest","toLowerCase","substring","_display","msg","n","search","length","split","i","console","log","repeat","len","Math","floor","_printInMiddle","_tidyDisplay","title","lineDec","module","exports"],"mappings":"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","sourcesContent":["const crypto = require(\"crypto\");\r\n\r\nconst _hash = (x) =>\r\n  crypto\r\n    .createHash(\"sha512\")\r\n    .update(x)\r\n    .digest(\"hex\")\r\n    .toLowerCase()\r\n    .substring(0, 64);\r\n\r\nconst _display = (msg) => {\r\n  let n = msg.search(\"\\n\");\r\n  let length = 0;\r\n\r\n  if (n !== -1) {\r\n    msg = msg.split(\"\\n\");\r\n    for (let i = 0; i < msg.length; i++) {\r\n      if (msg[i].length > length) {\r\n        length = msg[i].length;\r\n      }\r\n    }\r\n  } else {\r\n    length = msg.length;\r\n    msg = [msg];\r\n  }\r\n\r\n  console.log(\"+\" + \"+\".repeat(length + 2) + \"+\");\r\n  for (let i = 0; i < msg.length; i++) {\r\n    let len = length - msg[i].length;\r\n\r\n    if (len % 2 === 1) {\r\n      console.log(\r\n        \"+ \" +\r\n          \" \".repeat(Math.floor(len / 2)) +\r\n          msg[i] +\r\n          \" \".repeat(Math.floor(len / 2 + 1)) +\r\n          \" +\"\r\n      );\r\n    } else {\r\n      console.log(\r\n        \"+ \" +\r\n          \" \".repeat(Math.floor(len / 2)) +\r\n          msg[i] +\r\n          \" \".repeat(Math.floor(len / 2)) +\r\n          \" +\"\r\n      );\r\n    }\r\n  }\r\n  console.log(\"+\" + \"+\".repeat(length + 2) + \"+\");\r\n};\r\n\r\nconst _printInMiddle = (msg, length) => {};\r\nconst _tidyDisplay = (title, lineDec, msg) => {\r\n  let n = msg.search(\"\\n\");\r\n  let length = 0;\r\n\r\n  if (n !== -1) {\r\n    msg = msg.split(\"\\n\");\r\n    for (let i = 0; i < msg.length; i++) {\r\n      if (msg[i].length > length) {\r\n        length = msg[i].length;\r\n      }\r\n    }\r\n  } else {\r\n    length = msg.length;\r\n    msg = [msg];\r\n  }\r\n\r\n  console.log(\"+\" + \"-\".repeat(length + 2) + \"+\");\r\n  for (let i = 0; i < msg.length; i++) {\r\n    let len = length - msg[i].length;\r\n\r\n    if (len % 2 === 1) {\r\n      console.log(\r\n        `${lineDec} ${\" \".repeat(Math.floor(len / 2))} ${msg[i]} ${\" \".repeat(\r\n          Math.floor(len / 2 + 1)\r\n        )} ${lineDec}`\r\n      );\r\n    } else {\r\n      console.log(\r\n        `${lineDec} ${\" \".repeat(Math.floor(len / 2))} ${msg[i]} ${\" \".repeat(\r\n          Math.floor(len / 2)\r\n        )} ${lineDec}`\r\n      );\r\n    }\r\n  }\r\n  console.log(\"+\" + \"-\".repeat(length + 2) + \"+\");\r\n};\r\nmodule.exports = {\r\n  _hash,\r\n  _display,\r\n};\r\n"]},"metadata":{},"sourceType":"script"}