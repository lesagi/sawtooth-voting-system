{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sagi.levi\\\\DevProjects\\\\sawtooth-dev\\\\client-next\\\\src\\\\OpenCampaign.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\n\nconst axios = require('axios');\n\nconst OpenCampaign = ({\n  campaigns,\n  setCampaigns\n}) => {\n  useEffect(() => {//console.log(`SignMeUp:useEffect called`);\n  });\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: nameValid,\n    1: setNameValid\n  } = useState(false);\n  const {\n    0: sendProcessing,\n    1: setSendProcessing\n  } = useState(false);\n\n  function validateCampaignName(name) {\n    // const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    // return re.test(mail);\n    return true;\n  }\n\n  const notify = () => {\n    toast.info(`You will be notified of upcoming events ${name}`);\n  };\n\n  async function addCampaignReqHandler(event) {\n    event.preventDefault();\n    setSendProcessing(true);\n\n    try {\n      const res = await axios.post(`http://localhost:5000/open_campaign?name=${name}`);\n\n      if (res.success) {\n        const enabled = [...campaigns.enabled, res.data];\n        setCampaigns(_objectSpread(_objectSpread({}, campaigns), {}, {\n          enabled\n        }));\n        setName('');\n        toast.info(`Campaign ${name} has been added succesfully`);\n      } else {\n        toast.info(`An error has occured: ${res.error.message}`);\n      }\n    } catch (err) {\n      toast.info(`An error has occured: ${err.message}`);\n    }\n\n    setSendProcessing(false);\n  }\n\n  const buttonText = sendProcessing ? 'processing...' : 'Submit';\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"campaignName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Campaign Name\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"campaignName\",\n    name: \"CampaignName\",\n    \"aria-describedby\": \"campaign name\",\n    placeholder: \"Enter Campaign name\",\n    value: name,\n    onChange: e => {\n      setNameValid(validateCampaignName(e.target.value));\n      return setName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"This name will show publicly to all users\")), __jsx(\"button\", {\n    disabled: !nameValid || sendProcessing,\n    className: \"btn btn-primary\",\n    onClick: addCampaignReqHandler,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, buttonText)));\n};\n\nexport default OpenCampaign;","map":{"version":3,"sources":["C:/Users/sagi.levi/DevProjects/sawtooth-dev/client-next/src/OpenCampaign.js"],"names":["React","useEffect","useState","toast","ToastContainer","axios","require","OpenCampaign","campaigns","setCampaigns","name","setName","nameValid","setNameValid","sendProcessing","setSendProcessing","validateCampaignName","notify","info","addCampaignReqHandler","event","preventDefault","res","post","success","enabled","data","error","message","err","buttonText","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nconst axios = require('axios');\r\n\r\nconst OpenCampaign = ({ campaigns, setCampaigns }) => {\r\n  useEffect(() => {\r\n    //console.log(`SignMeUp:useEffect called`);\r\n  });\r\n\r\n  const [name, setName] = useState('');\r\n  const [nameValid, setNameValid] = useState(false);\r\n  const [sendProcessing, setSendProcessing] = useState(false);\r\n\r\n  function validateCampaignName(name) {\r\n    // const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    // return re.test(mail);\r\n    return true;\r\n  }\r\n\r\n  const notify = () => {\r\n    toast.info(`You will be notified of upcoming events ${name}`);\r\n  };\r\n\r\n  async function addCampaignReqHandler(event) {\r\n    event.preventDefault();\r\n    setSendProcessing(true);\r\n    try {\r\n      const res = await axios.post(\r\n        `http://localhost:5000/open_campaign?name=${name}`,\r\n      );\r\n      if (res.success) {\r\n        const enabled = [...campaigns.enabled, res.data];\r\n        setCampaigns({ ...campaigns, enabled });\r\n        setName('');\r\n        toast.info(`Campaign ${name} has been added succesfully`);\r\n      } else {\r\n        toast.info(`An error has occured: ${res.error.message}`);\r\n      }\r\n    } catch (err) {\r\n      toast.info(`An error has occured: ${err.message}`);\r\n    }\r\n    setSendProcessing(false);\r\n  }\r\n\r\n  const buttonText = sendProcessing ? 'processing...' : 'Submit';\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"campaignName\">Campaign Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"campaignName\"\r\n            name=\"CampaignName\"\r\n            aria-describedby=\"campaign name\"\r\n            placeholder=\"Enter Campaign name\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setNameValid(validateCampaignName(e.target.value));\r\n              return setName(e.target.value);\r\n            }}\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            This name will show publicly to all users\r\n          </small>\r\n        </div>\r\n        <button\r\n          disabled={!nameValid || sendProcessing}\r\n          className=\"btn btn-primary\"\r\n          onClick={addCampaignReqHandler}\r\n          type=\"submit\"\r\n        >\r\n          {buttonText}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenCampaign;\r\n"]},"metadata":{},"sourceType":"module"}